package guis;

import java.awt.Graphics;
import java.awt.Image;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import objetos.Animal;
import org.bson.types.ObjectId;

/**
 *
 * @author R.Pacheco, R.Contreras, E.Villagrana y G.Gaxiola
 * Esta clase representa gráficamente la interacción entre el usuario y el sistema
 */
public class DlgEditarAnimales extends javax.swing.JDialog {

    FondoPanelEditarAnimales fondo = new FondoPanelEditarAnimales();
    
    private final List<Animal> animales;
    
    public DlgEditarAnimales(java.awt.Frame parent, boolean modal, List<Animal> animales) {
        super(parent, modal);
        this.setContentPane(fondo);
        initComponents();
        
        this.grupoSexo.add(rbtMacho);
        this.grupoSexo.add(rbtHembra);
        
        this.animales = animales;
        
        actualizarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoSexo = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        campoNombreAnimal = new javax.swing.JTextField();
        campoEdadAnimal = new javax.swing.JTextField();
        botonAgregarAnimal = new javax.swing.JButton();
        rbtMacho = new javax.swing.JRadioButton();
        rbtHembra = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAnimalesRegistrados = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        botonEliminarAnimal = new javax.swing.JButton();
        botonRegresarAnimal = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("EDITAR ANIMALES");
        setResizable(false);

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("Nombre:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("DATOS DEL ANIMAL");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("Edad (años):");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setText("Sexo:");

        botonAgregarAnimal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        botonAgregarAnimal.setText("Agregar");
        botonAgregarAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarAnimalActionPerformed(evt);
            }
        });

        rbtMacho.setText("Macho");

        rbtHembra.setText("Hembra");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(campoNombreAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(campoEdadAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(rbtMacho)
                        .addGap(18, 18, 18)
                        .addComponent(rbtHembra))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(botonAgregarAnimal)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(campoNombreAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(campoEdadAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(rbtMacho)
                    .addComponent(rbtHembra))
                .addGap(28, 28, 28)
                .addComponent(botonAgregarAnimal)
                .addGap(21, 21, 21))
        );

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        tablaAnimalesRegistrados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Edad", "Sexo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaAnimalesRegistrados);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("ANIMALES REGISTRADOS EN ESTA ESPECIE");

        botonEliminarAnimal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        botonEliminarAnimal.setText("Eliminar");
        botonEliminarAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarAnimalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(botonEliminarAnimal)
                .addGap(58, 58, 58))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(125, 125, 125))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(botonEliminarAnimal)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        botonRegresarAnimal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        botonRegresarAnimal.setText("Regresar");
        botonRegresarAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegresarAnimalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonRegresarAnimal)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(botonRegresarAnimal)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botonAgregarAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarAnimalActionPerformed
        agregar();
    }//GEN-LAST:event_botonAgregarAnimalActionPerformed

    private void botonEliminarAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarAnimalActionPerformed
        eliminar();
    }//GEN-LAST:event_botonEliminarAnimalActionPerformed

    private void botonRegresarAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegresarAnimalActionPerformed
        dispose();
    }//GEN-LAST:event_botonRegresarAnimalActionPerformed

    private void eliminar() {
        int indiceFila = this.tablaAnimalesRegistrados.getSelectedRow();
        if (indiceFila == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione un animal de la lista eliminarlo.", "Aviso", JOptionPane.WARNING_MESSAGE);
        } else {
            animales.remove(indiceFila);
            actualizarTabla();
        }
    }
    
    private void agregar() {
        if(validar()) {
            Animal animal = new Animal();
            
            animal.setId(new ObjectId());
            animal.setNombre(this.campoNombreAnimal.getText());
            animal.setEdad(Integer.parseInt(this.campoEdadAnimal.getText()));
            animal.setSexo(this.rbtHembra.isSelected()?'H':'M');
            
            animales.add(animal);
            actualizarTabla();
        }
    }
    
    private boolean validar() {
        boolean valido = true;
        String vacios = "";
        String errores = "";

        if (this.campoNombreAnimal.getText().equals("")) {
            vacios = vacios + (vacios.equals("") ? "" : "\n") + "Introduzca el nombre del animal.";
            valido = false;
        } else {
            if (!verificar()) {
                errores = errores + (errores.equals("") ? "" : "\n") + "Ya existe un animal distinto con ese nombre.";
                valido = false;
            }
        }

        if (!(this.rbtHembra.isSelected()||this.rbtMacho.isSelected())) {
            vacios = vacios + (vacios.equals("") ? "" : "\n") + "Seleccione el sexo del animal.";
            valido = false;
        }
        
        if (this.campoEdadAnimal.getText().equals("")) {
            vacios = vacios + (vacios.equals("") ? "" : "\n") + "Ingrese la edad del animal.";
            valido = false;
        } else {
            try {
                int i = Integer.parseInt(campoEdadAnimal.getText());
                if (i < 0) {
                    errores = errores + (errores.equals("") ? "" : "\n") + "La edad del animal debe ser mayor a 0.";
                    valido = false;
                }
                if (i > 150) {
                    errores = errores + (errores.equals("") ? "" : "\n") + "La edad del animal debe ser menor 150.";
                    valido = false;
                }
            } catch (Exception e) {
                errores = errores + (errores.equals("") ? "" : "\n") + "Introduzca un número entero para la edad.";
                valido = false;
            }
        }

        if (!valido) {
            vacios = (vacios.equals("") ? "" : "Los siguientes campos están sin llenar: \n" + vacios);
            errores = (errores.equals("") ? "" : "Hay errores en los siguientes campos: \n" + errores);
            JOptionPane.showMessageDialog(this, vacios + "\n" + errores, "Aviso", JOptionPane.WARNING_MESSAGE);
        }

        return valido;
    }
    
    private boolean verificar() {
        for (Animal animal : animales) {
            if(animal.getNombre().equals(this.campoNombreAnimal.getText())) {
                JOptionPane.showMessageDialog(this, "Ya existe un animal distinto con ese nombre, elija otro.", 
                        "Aviso", JOptionPane.WARNING_MESSAGE);
                return false;
            }
        }
        return true;
    }

    private void actualizarTabla() {
        DefaultTableModel modelo = (DefaultTableModel)this.tablaAnimalesRegistrados.getModel();
        modelo.setRowCount(0);
        
        for (Animal animal : animales) {
            Object[] a = new Object[6];
            String sexo;
            
            switch(animal.getSexo()) {
                case 'M': case 'm': sexo = "Macho"; break;
                case 'H': case 'h': sexo = "Hembra";  break;
                default: sexo = "Otro";
            }
            
            a[0] = animal.getNombre();
            a[1] = animal.getEdad();
            a[2] = sexo;
            modelo.addRow(a);
        }
        
        this.tablaAnimalesRegistrados.setModel(modelo);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregarAnimal;
    private javax.swing.JButton botonEliminarAnimal;
    private javax.swing.JButton botonRegresarAnimal;
    private javax.swing.JTextField campoEdadAnimal;
    private javax.swing.JTextField campoNombreAnimal;
    private javax.swing.ButtonGroup grupoSexo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbtHembra;
    private javax.swing.JRadioButton rbtMacho;
    private javax.swing.JTable tablaAnimalesRegistrados;
    // End of variables declaration//GEN-END:variables

    class FondoPanelEditarAnimales extends JPanel{
        private Image imagen;
        
        @Override
        public void paint(Graphics g){
            
            imagen = new ImageIcon(getClass().getResource("/imagenes/FondoMenuPrincipal.jpg")).getImage();
            
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            
            setOpaque(false);
            
            super.paint(g);
        }
    }
}
